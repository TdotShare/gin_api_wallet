// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/bank/all": {
            "get": {
                "description": "bank all data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bank"
                ],
                "summary": "ข้อมูลแบงค์ทั้งหมด (กระเป๋าเงิน)",
                "operationId": "ActionBankGet",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models.Bank"
                        }
                    }
                }
            }
        },
        "/bank/create": {
            "post": {
                "description": "create bank",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bank"
                ],
                "summary": "สร้างกระเป๋าเงิน",
                "operationId": "ActionCreateBank",
                "parameters": [
                    {
                        "description": "data bank",
                        "name": "Bank",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Bank"
                        }
                    }
                ]
            }
        },
        "/bank/delete/{id}": {
            "get": {
                "description": "bank delete id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bank"
                ],
                "summary": "ลบข้อมูลข้อมูลกระเป๋าเงิน",
                "operationId": "ActionDeleteBank",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id bank",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ]
            }
        },
        "/bank/view/{id}": {
            "get": {
                "description": "bank view id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bank"
                ],
                "summary": "ดูรายละเอียดข้อมูลกระเป๋าเงิน",
                "operationId": "ActionViewBank",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id bank",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models.BankAccount"
                        }
                    }
                }
            }
        },
        "/history/all": {
            "get": {
                "description": "history data all",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "History"
                ],
                "summary": "ข้อมูลประวัติการใช้งานทั้งหมด",
                "operationId": "ActionHistoryGet",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models.History"
                        }
                    }
                }
            }
        },
        "/history/create": {
            "post": {
                "description": "create history",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "History"
                ],
                "summary": "สร้างประวัติการใช้งาน",
                "operationId": "ActionCreateHistory",
                "parameters": [
                    {
                        "description": "data history",
                        "name": "History",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.History"
                        }
                    }
                ]
            }
        },
        "/history/delete/{id}": {
            "get": {
                "description": "bank delete id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "History"
                ],
                "summary": "ลบประวัติการใช้งาน",
                "operationId": "ActionDeleteHistory",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id history",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ]
            }
        },
        "/user/all": {
            "get": {
                "description": "user all data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "ข้อมูลผู้ใช้งานทั้งหมด",
                "operationId": "ActionUserall",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models.Account"
                        }
                    }
                }
            }
        },
        "/user/create": {
            "post": {
                "description": "create user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "สร้างผู้ใช้งาน",
                "operationId": "ActionCreate",
                "parameters": [
                    {
                        "description": "data account",
                        "name": "Account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Account"
                        }
                    }
                ]
            }
        },
        "/user/delete/{id}": {
            "get": {
                "description": "create user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "ลบข้อมูลผู้ใช้งาน",
                "operationId": "ActionDelete",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id account",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ]
            }
        },
        "/user/update": {
            "post": {
                "description": "create user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "อัปเดตผู้ใช้งาน",
                "operationId": "ActionUpdate",
                "parameters": [
                    {
                        "description": "data account",
                        "name": "Account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Account"
                        }
                    }
                ]
            }
        },
        "/user/view/{id}": {
            "get": {
                "description": "user view id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "ดูรายละเอียดข้อมูลผู้ใช้งาน",
                "operationId": "ActionView",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id account",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models.Account"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Account": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.Bank": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.BankAccount": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/models.Account"
                },
                "account_id": {
                    "type": "integer"
                },
                "history": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.History"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.History": {
            "type": "object",
            "properties": {
                "bank_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "price": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
